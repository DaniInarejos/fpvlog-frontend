{
  "info": {
    "name": "FPV Log Backend API v1.3",
    "description": "Complete API collection for FPV Log Backend with drone types and brands",
    "version": "1.3.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "droneTypeId",
      "value": "",
      "type": "string"
    },
    {
      "key": "droneBrandId",
      "value": "",
      "type": "string"
    },
    {
      "key": "droneId",
      "value": "",
      "type": "string"
    },
    {
      "key": "flightId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          }
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.token) {",
                  "        pm.collectionVariables.set('authToken', response.token);",
                  "    }",
                  "    if (response.user && response.user._id) {",
                  "        pm.collectionVariables.set('userId', response.user._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.token) {",
                  "        pm.collectionVariables.set('authToken', response.token);",
                  "    }",
                  "    if (response.user && response.user._id) {",
                  "        pm.collectionVariables.set('userId', response.user._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        }
      ]
    },
    {
      "name": "Drone Types",
      "item": [
        {
          "name": "Get All Drone Types",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/drone-types",
              "host": ["{{baseUrl}}"],
              "path": ["drone-types"]
            }
          }
        },
        {
          "name": "Get Drone Type by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/drone-types/{{droneTypeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["drone-types", "{{droneTypeId}}"]
            }
          }
        },
        {
          "name": "Get Drone Types by Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/drone-types/category/racing",
              "host": ["{{baseUrl}}"],
              "path": ["drone-types", "category", "racing"]
            }
          }
        },
        {
          "name": "Create Drone Type",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response._id) {",
                  "        pm.collectionVariables.set('droneTypeId', response._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Racing Drone\",\n  \"description\": \"High-speed racing drone for competitive flying\",\n  \"category\": \"racing\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/drone-types",
              "host": ["{{baseUrl}}"],
              "path": ["drone-types"]
            }
          }
        },
        {
          "name": "Update Drone Type",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Updated description for racing drone\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/drone-types/{{droneTypeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["drone-types", "{{droneTypeId}}"]
            }
          }
        },
        {
          "name": "Delete Drone Type",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/drone-types/{{droneTypeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["drone-types", "{{droneTypeId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Drone Brands",
      "item": [
        {
          "name": "Get All Drone Brands",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/drone-brands",
              "host": ["{{baseUrl}}"],
              "path": ["drone-brands"]
            }
          }
        },
        {
          "name": "Get Drone Brand by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/drone-brands/{{droneBrandId}}",
              "host": ["{{baseUrl}}"],
              "path": ["drone-brands", "{{droneBrandId}}"]
            }
          }
        },
        {
          "name": "Get Drone Brands by Country",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/drone-brands/country/USA",
              "host": ["{{baseUrl}}"],
              "path": ["drone-brands", "country", "USA"]
            }
          }
        },
        {
          "name": "Create Drone Brand",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response._id) {",
                  "        pm.collectionVariables.set('droneBrandId', response._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"DJI\",\n  \"description\": \"Leading drone manufacturer\",\n  \"website\": \"https://www.dji.com\",\n  \"country\": \"China\",\n  \"founded\": 2006\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/drone-brands",
              "host": ["{{baseUrl}}"],
              "path": ["drone-brands"]
            }
          }
        },
        {
          "name": "Update Drone Brand",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Updated description for DJI\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/drone-brands/{{droneBrandId}}",
              "host": ["{{baseUrl}}"],
              "path": ["drone-brands", "{{droneBrandId}}"]
            }
          }
        },
        {
          "name": "Delete Drone Brand",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/drone-brands/{{droneBrandId}}",
              "host": ["{{baseUrl}}"],
              "path": ["drone-brands", "{{droneBrandId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Drones",
      "item": [
        {
          "name": "Get All Drones",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/drones",
              "host": ["{{baseUrl}}"],
              "path": ["drones"]
            }
          }
        },
        {
          "name": "Get Drone by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/drones/{{droneId}}",
              "host": ["{{baseUrl}}"],
              "path": ["drones", "{{droneId}}"]
            }
          }
        },
        {
          "name": "Create Drone",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response._id) {",
                  "        pm.collectionVariables.set('droneId', response._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"My Racing Drone\",\n  \"typeId\": \"{{droneTypeId}}\",\n  \"brandId\": \"{{droneBrandId}}\",\n  \"weight\": 250,\n  \"batteryCapacity\": 1500,\n  \"flightTime\": 8\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/drones",
              "host": ["{{baseUrl}}"],
              "path": ["drones"]
            }
          }
        },
        {
          "name": "Update Drone",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Racing Drone\",\n  \"weight\": 260\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/drones/{{droneId}}",
              "host": ["{{baseUrl}}"],
              "path": ["drones", "{{droneId}}"]
            }
          }
        },
        {
          "name": "Delete Drone",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/drones/{{droneId}}",
              "host": ["{{baseUrl}}"],
              "path": ["drones", "{{droneId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Flights",
      "item": [
        {
          "name": "Get All Flights",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/flights",
              "host": ["{{baseUrl}}"],
              "path": ["flights"]
            }
          }
        },
        {
          "name": "Get Flight by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/flights/{{flightId}}",
              "host": ["{{baseUrl}}"],
              "path": ["flights", "{{flightId}}"]
            }
          }
        },
        {
          "name": "Create Flight",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response._id) {",
                  "        pm.collectionVariables.set('flightId', response._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"droneId\": \"{{droneId}}\",\n  \"location\": \"Central Park\",\n  \"duration\": 15,\n  \"distance\": 2.5,\n  \"maxSpeed\": 45,\n  \"maxAltitude\": 120,\n  \"weather\": \"Sunny\",\n  \"notes\": \"Great flight session\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/flights",
              "host": ["{{baseUrl}}"],
              "path": ["flights"]
            }
          }
        },
        {
          "name": "Update Flight",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notes\": \"Updated flight notes\",\n  \"duration\": 18\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/flights/{{flightId}}",
              "host": ["{{baseUrl}}"],
              "path": ["flights", "{{flightId}}"]
            }
          }
        },
        {
          "name": "Delete Flight",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/flights/{{flightId}}",
              "host": ["{{baseUrl}}"],
              "path": ["flights", "{{flightId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["users", "profile"]
            }
          }
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          }
        },
        {
          "name": "Get User Drones",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/drones",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "drones"]
            }
          }
        },
        {
          "name": "Get User Flights",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/flights",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "flights"]
            }
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"updateduser\",\n  \"email\": \"updated@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          }
        }
      ]
    }
  ]
}